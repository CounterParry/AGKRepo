D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: overriding commands for target `obj/local/armeabi-v7a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: ignoring old commands for target `obj/local/armeabi-v7a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: overriding commands for target `obj/local/armeabi-v7a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o.commands.json'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: ignoring old commands for target `obj/local/armeabi-v7a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o.commands.json'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: overriding commands for target `obj/local/arm64-v8a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: ignoring old commands for target `obj/local/arm64-v8a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: overriding commands for target `obj/local/arm64-v8a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o.commands.json'
D:/AGK_Build/External/android-ndk-r20b/build//../build/core/build-binary.mk:507: warning: ignoring old commands for target `obj/local/arm64-v8a/objs/objs2/AGKAndroid/__/__/__/libjpeg/jcmaster.o.commands.json'
jni/../../../common/Source/cSprite.cpp:897:11: warning: enumeration values 'e_edge' and 'e_typeCount' not handled in switch [-Wswitch]
                switch( pShape->GetType() )
                        ^
jni/../../../common/Source/Wrapper.cpp:56797:11: warning: 4 enumeration values not handled in switch: 'CONTACT_CONSTRAINT_TYPE', 'D6_SPRING_CONSTRAINT_TYPE', 'GEAR_CONSTRAINT_TYPE'... [-Wswitch]
        switch ( constraint->getConstraintType() )
                 ^
1 warning generated.
jni/../../../renderer/OpenGLES2/OpenGL_ES2.cpp:1639:129: warning: cast to 'void *' from smaller integer type 'uint16_t' (aka 'unsigned short') [-Wint-to-void-pointer-cast]
                        glVertexAttribPointer( pAttrib->m_iLocation, pAttrib->m_iComponents, GL_FLOAT, GL_FALSE, m_pCurrVertexLayout->m_iVertexSize, (void*) m_pCurrVertexLayout->m_pOffsets[i] ); 
                                                                                                                                                     ^
1 warning generated.
jni/../../../renderer/Vulkan/VulkanShaders.cpp:1984:12: warning: 9 enumeration values not handled in switch: 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER', 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE', 'SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE'... [-Wswitch]
                        switch( pBindings[ j ]->descriptor_type )
                                ^
jni/../../../renderer/Vulkan/VulkanShaders.cpp:2024:12: warning: 9 enumeration values not handled in switch: 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER', 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE', 'SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE'... [-Wswitch]
                        switch( pCurrBinding->descriptor_type )
                                ^
2 warnings generated.
jni/../../../renderer/Vulkan/GLSLParser.cpp:127:25: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTryToken = "";
                                                                  ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:128:27: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTokenFound = "";
                                                                    ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:132:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "#version ";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_version; pTokenFound = pTryToken; bFoundVersionToken = true; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:132:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "#version ";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_version; pTokenFound = pTryToken; bFoundVersionToken = true; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:133:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "attribute ";                               if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_attribute; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:133:94: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "attribute ";                               if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_attribute; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:134:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "varying ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_varying; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:134:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "varying ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_varying; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:135:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniform; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:135:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniform; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:136:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform sampler";                  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:136:98: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform sampler";                  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:137:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform highp sampler";    if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:137:102: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform highp sampler";    if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:138:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform mediump sampler";  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:138:104: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform mediump sampler";  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:139:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform lowp sampler";             if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:139:102: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform lowp sampler";             if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:140:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "void main";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_fragmain; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:140:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "void main";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_fragmain; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:196:25: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTryToken = "";
                                                                  ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:197:27: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTokenFound = "";
                                                                    ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:199:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat2 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat2; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:199:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat2 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat2; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:200:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat3 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat3; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:200:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat3 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat3; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:201:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat4 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat4; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:201:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat4 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat4; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:202:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2d(";                       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:202:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2d(";                       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:203:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2d (";                      if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:203:94: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2d (";                      if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:204:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2dlod(";            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:204:95: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2dlod(";            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:205:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2dlod (";           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:205:96: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2dlod (";           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:206:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision highp ";         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:206:98: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision highp ";         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:207:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision mediump ";       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:207:99: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision mediump ";       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:208:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision lowp ";          if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:208:97: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision lowp ";          if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:209:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "highp ";                           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_highp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:209:90: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "highp ";                           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_highp; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:210:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mediump ";                         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_mediump; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:210:92: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mediump ";                         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_mediump; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:211:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "lowp ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_lowp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:211:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "lowp ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_lowp; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:212:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "gl_FragColor";                     if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && iVertFragPass == 1 ) { iHasFragOutput = 1; tokenFound = glsl450token_gl_FragColor; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:212:95: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "gl_FragColor";                     if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && iVertFragPass == 1 ) { iHasFragOutput = 1; tokenFound = glsl450token_gl_FragColor; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
50 warnings generated.
jni/../../../zlib/inflate.c:1496:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;
                                                        ~~~ ^
jni/../../../zlib/ioapi.c:159:11: warning: implicit declaration of function 'ftello' is invalid in C99 [-Wimplicit-function-declaration]
    ret = FTELLO_FUNC((FILE *)stream);
          ^
jni/../../../zlib/ioapi.c:22:29: note: expanded from macro 'FTELLO_FUNC'
#define FTELLO_FUNC(stream) ftello(stream)
                            ^
jni/../../../zlib/ioapi.c:205:8: warning: implicit declaration of function 'fseeko' is invalid in C99 [-Wimplicit-function-declaration]
    if(FSEEKO_FUNC((FILE *)stream, offset, fseek_origin) != 0)
       ^
jni/../../../zlib/ioapi.c:23:45: note: expanded from macro 'FSEEKO_FUNC'
#define FSEEKO_FUNC(stream, offset, origin) fseeko(stream, offset, origin)
                                            ^
2 warnings generated.
jni/../../../zlib/unzip.c:1634:24: warning: incompatible pointer types assigning to 'const unsigned int *' from 'const uLongf *' (aka 'const unsigned long *') [-Wincompatible-pointer-types]
        s->pcrc_32_tab = get_crc_table();
                       ^ ~~~~~~~~~~~~~~~
jni/../../../zlib/zip.c:1088:6: warning: expression result unused [-Wunused-value]
    (crcForCrypting);
     ^~~~~~~~~~~~~~
1 warning generated.
1 warning generated.
1 warning generated.
1 warning generated.
jni/../../../common/Source/Wrapper.cpp:56797:11: warning: 4 enumeration values not handled in switch: 'CONTACT_CONSTRAINT_TYPE', 'D6_SPRING_CONSTRAINT_TYPE', 'GEAR_CONSTRAINT_TYPE'... [-Wswitch]
        switch ( constraint->getConstraintType() )
                 ^
jni/../../../common/Source/cSprite.cpp:897:11: warning: enumeration values 'e_edge' and 'e_typeCount' not handled in switch [-Wswitch]
                switch( pShape->GetType() )
                        ^
1 warning generated.
jni/../../../renderer/OpenGLES2/OpenGL_ES2.cpp:1639:129: warning: cast to 'void *' from smaller integer type 'uint16_t' (aka 'unsigned short') [-Wint-to-void-pointer-cast]
                        glVertexAttribPointer( pAttrib->m_iLocation, pAttrib->m_iComponents, GL_FLOAT, GL_FALSE, m_pCurrVertexLayout->m_iVertexSize, (void*) m_pCurrVertexLayout->m_pOffsets[i] ); 
                                                                                                                                                     ^
jni/../../../platform/android/Source/AndroidCore.cpp:7753:45: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
                                        agk::m_pJoystick[ j ] = new cJoystick( (void*)id );
                                                                               ^
jni/../../../platform/android/Source/AndroidCore.cpp:7760:41: warning: cast to 'void *' from smaller integer type 'int' [-Wint-to-void-pointer-cast]
                                        agk::m_pJoystick[ j ]->m_pDevice = (void*)id;
                                                                           ^
jni/../../../renderer/Vulkan/VulkanShaders.cpp:1984:12: warning: 9 enumeration values not handled in switch: 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER', 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE', 'SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE'... [-Wswitch]
                        switch( pBindings[ j ]->descriptor_type )
                                ^
jni/../../../renderer/Vulkan/VulkanShaders.cpp:2024:12: warning: 9 enumeration values not handled in switch: 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLER', 'SPV_REFLECT_DESCRIPTOR_TYPE_SAMPLED_IMAGE', 'SPV_REFLECT_DESCRIPTOR_TYPE_STORAGE_IMAGE'... [-Wswitch]
                        switch( pCurrBinding->descriptor_type )
                                ^
1 warning generated.
2 warnings generated.
2 warnings generated.
jni/../../../renderer/Vulkan/GLSLParser.cpp:127:25: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTryToken = "";
                                                                  ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:128:27: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTokenFound = "";
                                                                    ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:132:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "#version ";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_version; pTokenFound = pTryToken; bFoundVersionToken = true; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:132:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "#version ";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_version; pTokenFound = pTryToken; bFoundVersionToken = true; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:133:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "attribute ";                               if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_attribute; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:133:94: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "attribute ";                               if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_attribute; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:134:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "varying ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_varying; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:134:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "varying ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_varying; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:135:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniform; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:135:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform ";                                 if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniform; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:136:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform sampler";                  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:136:98: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform sampler";                  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:137:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform highp sampler";    if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:137:102: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform highp sampler";    if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:138:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform mediump sampler";  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:138:104: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform mediump sampler";  if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:139:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "uniform lowp sampler";             if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:139:102: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "uniform lowp sampler";             if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_uniformsampler; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:140:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "void main";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_fragmain; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:140:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "void main";                                if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_fragmain; pTokenFound = pTryToken; }
                                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:196:25: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTryToken = "";
                                                                  ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:197:27: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                char* pTokenFound = "";
                                                                    ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:199:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat2 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat2; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:199:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat2 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat2; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:200:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat3 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat3; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:200:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat3 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat3; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:201:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mat4 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat4; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:201:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mat4 ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && *(pPtr-1) == 32 ) { tokenFound = glsl450token_mat4; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:202:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2d(";                       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:202:93: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2d(";                       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:203:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2d (";                      if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:203:94: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2d (";                      if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2D; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:204:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2dlod(";            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:204:95: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2dlod(";            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:205:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "texture2dlod (";           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:205:96: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "texture2dlod (";           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_texture2Dlod; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:206:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision highp ";         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:206:98: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision highp ";         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:207:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision mediump ";       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:207:99: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision mediump ";       if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:208:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "precision lowp ";          if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:208:97: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "precision lowp ";          if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_precisionhighp; pTokenFound = pTryToken; }
                                                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:209:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "highp ";                           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_highp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:209:90: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "highp ";                           if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_highp; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:210:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "mediump ";                         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_mediump; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:210:92: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "mediump ";                         if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_mediump; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:211:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "lowp ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_lowp; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:211:89: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "lowp ";                            if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL ) { tokenFound = glsl450token_lowp; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
jni/../../../renderer/Vulkan/GLSLParser.cpp:212:19: warning: ISO C++11 does not allow conversion from string literal to 'char *' [-Wwritable-strings]
                                                pTryToken = "gl_FragColor";                     if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && iVertFragPass == 1 ) { iHasFragOutput = 1; tokenFound = glsl450token_gl_FragColor; pTokenFound = pTryToken; }
                                                            ^
jni/../../../renderer/Vulkan/GLSLParser.cpp:212:95: warning: comparison between NULL and non-pointer ('int' and NULL) [-Wnull-arithmetic]
                                                pTryToken = "gl_FragColor";                     if ( local_strincmp( pPtr, pTryToken, strlen(pTryToken) ) == NULL && iVertFragPass == 1 ) { iHasFragOutput = 1; tokenFound = glsl450token_gl_FragColor; pTokenFound = pTryToken; }
                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~
50 warnings generated.
jni/../../../zlib/inflate.c:1496:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value]
    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;
                                                        ~~~ ^
jni/../../../zlib/ioapi.c:159:11: warning: implicit declaration of function 'ftello' is invalid in C99 [-Wimplicit-function-declaration]
    ret = FTELLO_FUNC((FILE *)stream);
          ^
jni/../../../zlib/ioapi.c:22:29: note: expanded from macro 'FTELLO_FUNC'
#define FTELLO_FUNC(stream) ftello(stream)
                            ^
jni/../../../zlib/ioapi.c:205:8: warning: implicit declaration of function 'fseeko' is invalid in C99 [-Wimplicit-function-declaration]
    if(FSEEKO_FUNC((FILE *)stream, offset, fseek_origin) != 0)
       ^
jni/../../../zlib/ioapi.c:23:45: note: expanded from macro 'FSEEKO_FUNC'
#define FSEEKO_FUNC(stream, offset, origin) fseeko(stream, offset, origin)
                                            ^
2 warnings generated.
jni/../../../zlib/unzip.c:1634:24: warning: incompatible pointer types assigning to 'const unsigned int *' from 'const uLongf *' (aka 'const unsigned long *') [-Wincompatible-pointer-types]
        s->pcrc_32_tab = get_crc_table();
                       ^ ~~~~~~~~~~~~~~~
jni/../../../zlib/zip.c:1088:6: warning: expression result unused [-Wunused-value]
    (crcForCrypting);
     ^~~~~~~~~~~~~~
1 warning generated.
1 warning generated.
1 warning generated.
1 warning generated.
