_header
Returning values in functions

_text
Returning data from a function is a simple process - just place the data to be returned to the caller directly after the <i>endfunction</i> keyword, as shown in this example.

_tier1
do
	print ( myFunction ( 10, 20 ) )
	<br>	
	sync ( )
loop
<br>
function myFunction ( a as integer, b as integer )
	c as integer = 0
	c = a + b
endfunction c
_tier1

_text
The variable <i>c</i> is declared after the keyword <i>endfunction</i>, resulting in the value of <i>c</i> being returned to the caller. The code within the function declares <i>c</i> as an integer and assigns it a default value of 0. The next line performs an expression to add the values of <i>a</i> and <i>b</i> and assign the result to <i>c</i>.

_text
Inside the <i>do</i> loop, when the <i>print</i> command is called it passes in a function call to <i>myFunction</i> as a parameter. This is valid because when <i>myFunction</i> has run its return value passed as a parameter to the <i>print</i> command.

_text
Return values can either be a variable, an expression or a literal value, as shown in this example.

_tier1
do
	print ( myFunctionA ( 10, 20 ) )
	print ( myFunctionB ( 10, 20 ) )
	print ( myFunctionC ( 10, 20 ) )
	print ( myFunctionD ( 10, 20 ) )
	<br>
	sync ( )
loop
<br>
function myFunctionA ( a as integer, b as integer )
	c as integer = 0
	c = a + b
endfunction c
<br>
function myFunctionB ( a as integer, b as integer )
	c = a + b
endfunction c
<br>
function myFunctionC ( a as integer, b as integer )
<br>
endfunction a + b
<br>
function myFunctionD ( a as integer, b as integer )
<br>
endfunction 30
_tier1

_text
<i>myFunctionA</i> declares a variable <i>c</i>, and assigns it the value of <i>a</i> + <i>b</i>. The value of <i>c</i> is returned once the function has completed.

_text
<i>myFunctionB</i> declares a variable <i>c</i>, which is not explicitly declared, meaning it is treated as an integer, which is assigned the value of <i>a</i> + <i>b</i>. The value of <i>c</i> is returned once the function has completed.

_text
<i>myFunctionC</i> has nothing happening inside the function. Instead the return value is calculated directly after the <i>endfunction</i> keyword, where the values of <i>a</i> and <i>b</i> are added together and returned to the caller.

_text
<i>myFunctionD</i> returns a literal value to the calling function (30).


_navigation
functions_and_branching_002.htm functions_and_branching_004.htm