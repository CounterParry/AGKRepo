<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>CreateObjectFromMeshMemblock - AGK Help</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="text/javascript" src="../../main.js"></script>
<script type="text/javascript">var commandName = "CreateObjectFromMeshMemblock";</script>
<link href="../../main.css" rel="styleSheet" type="text/css" /><script type="text/javascript">window.addEventListener("message", receiveMessage, false);function receiveMessage(event){if( event.origin !== 'http://www.appgamekit.com' && event.origin !== 'https://www.appgamekit.com' && event.origin !== 'http://appgamekit.com' && event.origin !== 'https://appgamekit.com' && event.origin !== 'http://agk.thegamecreators.com' && event.origin !== 'https://agk.thegamecreators.com' ) return;document.getElementById('comments').style.height = (parseInt(event.data))+'px'; document.getElementById('comments').scrolling='no';}</script>
<script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-jquery.min.js"></script><script type="text/javascript" src="https://www.appgamekit.com/assets/js/docs-translate.js"></script></head>
<body>
<div class="header" style="background: #000 url('../../gfx/header-back.png') top center no-repeat;"><div><div class="navigation"><a href="../../home.html"><img src="../../gfx/b-home.png" width="76" height="44" alt=""></a><a href="javascript:history.go(-1)"><img src="../../gfx/b-back.png" width="71" height="44" alt=""></a><a href="javascript:window.print()"><img src="../../gfx/b-print.png" width="75" height="44" alt=""></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-c.png" width="253" height="44" alt=""  id="basicCodeBlock0" border="0"></a><a style="cursor:pointer;" onclick="ToggleCPP()"><img src="../../gfx/lang-basic.png" width="253" height="44" alt=""  id="cppCodeBlock0" style="display:none" border="0"></a></div><a href="https://www.appgamekit.com" target="_blank"><img class="logo" src="../../gfx/agk-logo.png" height="44" style="margin:15px 0" alt="App Game Kit" border="0"></a></div><img src="../../gfx/drop-shadow.png" width="1158" height="40" alt=""></div><div class="breadcrumbs">
<a href="../../home.html">Home</a> &gt; <a href="../../commands.html">Commands</a> &gt; <a href="../Memblock.htm">Memblock</a> &gt; CreateObjectFromMeshMemblock</div><div class="page"><h1>CreateObjectFromMeshMemblock</h1><h2>Description</h2><p>Creates an object with a single mesh constructed from the given memblock. Any subsequent changes to the memblock will not affect the mesh, you should call <i>SetObjectMeshFromMemblock</i> to modify an existing mesh. The first 4 bytes of the memblock represent the number of vertices in the mesh. The second 4 bytes represent the number of indices in the mesh, this may be 0 in which case every three vertices represents a polygon, and no vertices can be shared. If the number of indices is greater than 0 then every three indices represent a polygon and vertices may be shared between polygons. Indices start at 0 so index 0 references the first vertex in the list. The third 4 bytes represents the number of attributes per vertex, e.g. position, normals, and UV data are all potential attributes, so a vertex containing all three would have 3 attributes. A vertex must have a position attribute, everything else is optional. The fourth 4 bytes represent the size of a single vertex in bytes, this can be calculated from the attribute data but is given for convenience. The fifth 4 bytes is offset for the beginning of the vertex data, so you can reach it easily. The sixth 4 bytes is offset for the beginning of the index data, will be 0 if there are no indices. After those 6 values, starting at offset 24, is the vertex attribute data. The vertex attribute data describes how the vertex data is laid out, for example if it has normals, UV data, etc. For each attribute there is a 1 byte data type, 1 byte component count, 1 byte normalize flag, 1 byte string length, and X bytes of string data for the attribute name. The data type will be 0 for floats (used for almost everything, e.g. position, normals, etc) or 1 for unsigned bytes (used for vertex colors). The component count is the number of values per attribute, e.g. position has 3 components, x,y,z, UV data has 2 components, and vertex colors have 4 components. Note that any unsigned byte data type must have 4 components even if some are unused. The normalize flag is only used for unsigned byte data types and will convert values in the range 0-255 into 0.0-1.0 for use in a shader. Usually the normalize flag will be 1 for color attributes and 0 for everything else. The string length byte must always be a multiple of 4 for alignment reasons, the string itself might have slightly less characters but always round up to the nearest multiple of 4 for the string length value. e.g. a string of length 5 should have a string length value of 8. Note that a string of 4 characters has a null terminator on the end which makes it length 5, so even though it has a multiple of 4 characters already it must use a length value of 8 due to the null terminator. The attribute name string will be used by the shader to recognise what the vertex data is, the attribute names recognised by AGK are "position", "normal", "tangent", "binormal", "color", "uv", "uv1", "boneweights", and "boneindices", however you may add attributes with any name you like as long as you write a matching shader that has the same names. If you are not using your own shader and instead rely on AGK to draw the object then you must stick to the above attribute names. Following the attribute data is the raw vertex data, which usually starts with the "position" attribute. It will be a 4 byte float for the X position, a 4 byte float for the Y position, and a 4 byte float for the Z position. This continues for each attribute specified in the attribute data. Note that color data will always be 4 bytes in total, 1 unsigned byte for each color channel. You can access individual vertices by using the vertex size provided above and the vertex index like so offset=vertexDataOffset+(vertexIndex*vertexSize). Lastly is the index data, if present. Each index is a 4 byte integer which references a vertex in the vertex data. Every three indices represents a polygon. </p><h2>Definition</h2><div id="basicCodeBlock1" class="basiccode"><p>integer CreateObjectFromMeshMemblock( memID ) </p></div><div id="cppCodeBlock2" style="display:none" class="cppcode"><p>uint32_t agk::CreateObjectFromMeshMemblock( uint32_t memID )</p></div><div id="basicCodeBlock3" class="basiccode"><p> CreateObjectFromMeshMemblock( objID, memID ) </p></div><div id="cppCodeBlock4" style="display:none" class="cppcode"><p>void agk::CreateObjectFromMeshMemblock( uint32_t objID, uint32_t memID )</p></div><h2>Parameters</h2><ul><li><i>memID</i> - The index of the memblock to use to create the object mesh</li><li><i>objID</i> - The ID of the object to create</li></ul><br><br><div style="height:2px;width:100%;border-bottom:1px solid #b0b0b0;margin:0px auto 10px auto;padding:0px;"> </div><iframe id="comments" style="width:700px;margin:0px auto;border:none" src="https://www.appgamekit.com/help/comments?command=CreateObjectFromMeshMemblock"></iframe></div><div class="footer" style="background: #000 url('../../gfx/footer-back.png') top center no-repeat;"><div><p><a href="https://www.thegamecreators.com" target="_blank" style="float:none"><img style="float:right;margin-top:2px" src="../../gfx/tgc-logo.png" width="188" height="27" alt="" border="0"></a><br><strong>App Game Kit</strong> &nbsp;&copy; The Game Creators Ltd. All Rights Reserved.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="mailto:agkreports@thegamecreators.com" style="float:none"><font color="FFFFFF">Report an issue</font></a></p></p></div></div></body></html>